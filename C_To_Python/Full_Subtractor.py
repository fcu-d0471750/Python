'''
減法器
Full Subtractor
'''

#=================================================================================
#宣告變數
#=================================================================================
#int: 相減結果
Difference = 0
#int: 輸入1
Input_1 = 0
#int: 輸入2
Input_2 = 0
#int: 儲存借位
C = 0

#=================================================================================
#宣告方法
#=================================================================================
#==============================
#方法: 減法器(Input_1=輸入第一個整數  , Input_2=輸入第二個整數  , ci=借位輸入 , now=執行到第幾個位元 )
#==============================
def F_Subtractor(Input_1 , Input_2 , ci , now):
    # D=2個位元的差
    D = 0
    # CO=借位
    CO = 0

    # D的邏輯函數
    D = Input_1 ^ Input_2 ^ ci
    # C的邏輯函數
    CO = ( ((~Input_1)&Input_2) | (Input_2&ci) | (ci&(~Input_1)) )

    # 由於是要使用外部的Difference，需要宣告為global，告知是要使用外部的Difference
    global Difference
    # 每執行一次,Difference的值都向左移動一位元，用於計算下1個位元
    Difference = (D << now) | Difference

    # 回傳借位
    return CO


#=================================================================================
#(執行)
#=================================================================================

#==============================
#輸入整數
#==============================
Input_1 = eval(input('Number 1: '))
Input_2 = eval(input('Number 2: '))


#==============================
#減法器執行
#==============================
for i in range(0,32,1):
    if(i==0):
        C = F_Subtractor( (Input_1&1) , (Input_2&1) , 0 , 0)
    else:
        C = F_Subtractor( ((Input_1>>i)&1) , ((Input_2>>i)&1) , C , i)

#==============================
#印出
#==============================
print(Difference)