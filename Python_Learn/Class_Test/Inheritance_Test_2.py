#==============================================
#定義一個父類別Animal
#==============================================
class Animal():
    #==============================================
    #屬性(Attribute)
    #==============================================
    #姓名
    Name = ''
    #毛色
    Fur_color = ''

    #==============================================
    #建構子(Constructor)
    #==============================================
    def __init__(self, Name, Fur_color):
        self.Name = Name
        self.Fur_color = Fur_color

    #==============================================
    #方法(Methods)
    #==============================================
    #吠叫
    def Bark(self):
        print('Animal 叫了一聲' )

#==============================================
#定義一個子類別類別Dog，繼承Animal
#==============================================
class Dog(Animal):

    #==============================================
    #建構子(Constructor)
    #==============================================
    #保留Animal的屬性Name、Fur_color
    def __init__(self , Name , Fur_color):
        self.Name = Name
        self.Fur_color = Fur_color

    #==============================================
    #方法(Methods)
    #==============================================
    #保留Animal的方法Bark(self)
    #吠叫
    def Bark(self):
        print('毛色為', self.Fur_color , '的' , self.Name , '叫了一聲')

    #衍生出新的方法
    #跑
    def Run(self):
        print(self.Name , '開始跑')

#==============================================
#執行
#==============================================
#生成一個物件Animal
animal = Animal('animal' , 'Dark')
#生成一個物件Dog
DD = Dog('DD' , 'White')

#animal叫了一聲
animal.Bark()
#DD叫了一聲
DD.Bark()
#DD開始跑
DD.Run()








